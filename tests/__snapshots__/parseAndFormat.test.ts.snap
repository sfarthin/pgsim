// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parse and format alterSeqStmt.sql 1`] = `
"-- Hello
ALTER SEQUENCE foo 
	OWNED BY a.aaa;

-- Hello
ALTER SEQUENCE foo 
	-- foo
	-- foo2
	INCREMENT BY 1;
"
`;

exports[`Parse and format createEnumStmt.sql 1`] = `
"-- Top 1
-- Top 2

-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
-- 7
-- 8
-- 9
-- 10
-- 11
CREATE TYPE foo AS ENUM (
	-- comment on a
	'a',
	-- comment on b
	'b',
	-- comment on c
	'c',
	-- comment on d
	'd',
	-- comment on e
	'e'
);

-- Bottom 1
-- Bottom 2
"
`;

exports[`Parse and format createSeqStmt.sql 1`] = `
"-- This has no options
CREATE SEQUENCE foo;

-- 1
-- 2
CREATE SEQUENCE foo 
	-- Start With 1
	START WITH 1
	-- INCREMENT BY 1
	INCREMENT BY 1
	NO MINVALUE
	NO MAXVALUE
	NO CYCLE
	CACHE 1
	-- foo bac
	OWNED BY NONE;

-- another comment
-- and another
-- foo bar

CREATE SEQUENCE IF NOT EXISTS foo2 
	MINVALUE 4
	MAXVALUE 6
	-- different variation
	INCREMENT BY 2
	-- different variation
	START WITH 2
	CYCLE
	OWNED BY foo.bar;
"
`;

exports[`Parse and format createStmt.sql 1`] = `
"-- foo
-- foo
CREATE TABLE adsiiodnsaoidnoasindosaind9 (
	-- integer
	ahahhahah INTEGER,
	-- asdasd asasd asd
	ahahhahah INTEGER,
	aa INTEGER NOT NULL DEFAULT 1 PRIMARY KEY,
	-- int
	aab INTEGER DEFAULT '4',
	-- int4
	aac INT4,
	aa BIGINT DEFAULT 1,
	-- 1
	-- 2
	-- 3
	-- 4
	-- 5
	-- 6
	ab INT8 NOT NULL,
	-- 1
	-- 2
	-- 3
	-- 4
	-- 5
	ac BIGSERIAL NULL,
	ad SERIAL8 UNIQUE,
	ae SERIAL,
	af SERIAL4,
	aba BIT(1),
	abb BIT(2),
	abc BIT VARYING,
	abca BIT VARYING(3),
	abd VARBIT,
	abda VARBIT(3),
	bba INTERVAL,
	bbb INTERVAL DAY TO HOUR,
	ba BOOL DEFAULT TRUE,
	bbaa BOOLEAN,
	caa BOX,
	cba BYTEA,
	-- hello
	cc CIDR,
	-- yo
	-- yo
	cd CIRCLE,
	ce DATE,
	cf INET,
	cg LINE,
	ch LSEG,
	ci MACADDR,
	cj MONEY,
	ck TSQUERY,
	cl TSVECTOR,
	cm TXID_SNAPSHOT,
	cn UUID,
	co XML,
	daa REAL,
	dba FLOAT4,
	dda SMALLINT,
	ddb INT2,
	da DOUBLE PRECISION,
	db FLOAT8,
	eaa DECIMAL,
	eb DECIMAL,
	eca DECIMAL(5),
	ecb DECIMAL(5),
	eccv DECIMAL(5, 2),
	ecd DECIMAL(5, 2),
	bb VARCHAR(255),
	bc VARCHAR(4),
	bd VARCHAR,
	be VARCHAR,
	bf VARCHAR(235),
	bg CHAR,
	bh CHAR(4),
	bi CHAR,
	bj CHAR(4),
	bk TEXT,
	caz TIMESTAMP WITH TIME ZONE,
	cbx TIMESTAMPTZ,
	cax TIME WITH TIME ZONE,
	cbxx TIMETZ
);

CREATE TABLE some_table (
	-- This comment will go with \\"c\\"
	c INTEGER
);

CREATE TABLE reference_examples (
	a INTEGER REFERENCES products,
	-- 1
	-- 2
	-- 3
	-- 4
	-- 5
	-- 6
	-- 7
	-- 8
	bss INTEGER REFERENCES products(some_id),
	c INTEGER,
	FOREIGN KEY (c) REFERENCES other_table (c1)
);

CREATE TABLE reference_group_examples (
	a INTEGER REFERENCES products,
	b INTEGER,
	c INTEGER,
	FOREIGN KEY (b, c) REFERENCES other_table (c1, c2)
);
"
`;

exports[`Parse and format dropStmt.sql 1`] = `
"-- DROP SEQUENCE [ IF EXISTS ] name [, ...] [ CASCADE | RESTRICT ]
-- 1
-- 2
-- 3
DROP SEQUENCE foo;

-- DROP TABLE [ IF EXISTS ] name [, ...] [ CASCADE | RESTRICT ]
DROP TABLE foo;

-- DROP TYPE [ IF EXISTS ] name [, ...] [ CASCADE | RESTRICT ]
DROP TYPE foo;

DROP TABLE IF EXISTS foo;

DROP TYPE IF EXISTS foo;

-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
DROP SEQUENCE IF EXISTS foo;

DROP TABLE yo CASCADE;

-- yo
-- yo
DROP TABLE yo;
"
`;

exports[`Parse and format variableSetStmt.sql 1`] = `
"SET statement_timeout = 0;

SET lock_timeout = 0;

SET client_encoding = 'UTF8';

SET standard_conforming_strings = 'on';

SET check_function_bodies = 'false';

SET client_min_messages = 'warning';

-- 1
-- foo
SET statement_timeout = 0;

SET client_encoding = ' UTF8';
"
`;
