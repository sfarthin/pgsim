// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parse and format 01-createStmt.sql 1`] = `
"-- foo
-- foo
CREATE TABLE adsiiodnsaoidnoasindosaind9 (
	-- integer
	ahahhahah INTEGER,
	-- asdasd asasd asd
	ahahhahah INTEGER,
	aa INTEGER NOT NULL DEFAULT 1 PRIMARY KEY,
	-- int
	aab INTEGER DEFAULT '4',
	-- int4
	aac INT4,
	aa BIGINT DEFAULT 1,
	-- 1
	-- 2
	-- 3
	-- 4
	-- 5
	-- 6
	ab INT8 NOT NULL,
	-- 1
	-- 2
	-- 3
	-- 4
	-- 5
	ac BIGSERIAL NULL,
	ad SERIAL8 UNIQUE,
	ae SERIAL,
	af SERIAL4,
	aba BIT(1),
	abb BIT(2),
	abc BIT VARYING,
	abca BIT VARYING(3),
	abd VARBIT,
	abda VARBIT(3),
	bba INTERVAL,
	bbb INTERVAL DAY TO HOUR,
	ba BOOL DEFAULT TRUE,
	bbaa BOOLEAN,
	caa BOX,
	cba BYTEA,
	-- hello
	cc CIDR,
	-- yo
	-- yo
	cd CIRCLE,
	ce DATE,
	cf INET,
	cg LINE,
	ch LSEG,
	ci MACADDR,
	cj MONEY,
	ck TSQUERY,
	cl TSVECTOR,
	cm TXID_SNAPSHOT,
	cn UUID,
	co XML,
	daa REAL,
	dba FLOAT4,
	dda SMALLINT,
	ddb INT2,
	da DOUBLE PRECISION,
	db FLOAT8,
	eaa DECIMAL,
	eb DECIMAL,
	eca DECIMAL(5),
	ecb DECIMAL(5),
	eccv DECIMAL(5, 2),
	ecd DECIMAL(5, 2),
	bb VARCHAR(255),
	bc VARCHAR(4),
	bd VARCHAR,
	be VARCHAR,
	bf VARCHAR(235),
	bg CHAR,
	bh CHAR(4),
	bi CHAR,
	bj CHAR(4),
	bk TEXT,
	caz TIMESTAMP WITH TIME ZONE,
	cbx TIMESTAMPTZ,
	cax TIME WITH TIME ZONE DEFAULT now(),
	cbxx TIMETZ
);

CREATE TABLE some_table (
	-- This comment will go with \\"c\\"
	c INTEGER
);

CREATE TABLE reference_examples (
	a INTEGER REFERENCES products,
	-- 1
	-- 2
	-- 3
	-- 4
	-- 5
	-- 6
	-- 7
	-- 8
	bss INTEGER REFERENCES products(some_id),
	c INTEGER,
	FOREIGN KEY (c) REFERENCES other_table (c1)
);

CREATE TABLE reference_group_examples (
	a INTEGER REFERENCES products,
	b INTEGER,
	c INTEGER,
	FOREIGN KEY (b, c) REFERENCES other_table (c1, c2)
);

CREATE TABLE foo (
	a SOME_CUSTOM_TYPE
);

-- we can parse the schema
CREATE TABLE buckets.foo (
	a INTEGER
);

-- we can parse the schema, and automatically remove public from schema name.
CREATE TABLE public.foo (
	b INTEGER
);
"
`;

exports[`Parse and format 02-createEnumStmt.sql 1`] = `
"-- Top 1
-- Top 2

-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
-- 7
-- 8
-- 9
-- 10
-- 11
CREATE TYPE foo AS ENUM (
	-- comment on a
	'a',
	-- comment on b
	'b',
	-- comment on c
	'c',
	-- comment on d
	'd',
	-- comment on e
	'e'
);

-- Bottom 1
-- Bottom 2
"
`;

exports[`Parse and format 03-createSeqStmt.sql 1`] = `
"-- This has no options
CREATE SEQUENCE foo;

-- 1
-- 2
CREATE SEQUENCE foo 
	-- Start With 1
	START WITH 1
	-- INCREMENT BY 1
	INCREMENT BY 1
	NO MINVALUE
	NO MAXVALUE
	NO CYCLE
	CACHE 1
	-- foo bac
	OWNED BY NONE;

-- another comment
-- and another
-- foo bar

CREATE SEQUENCE IF NOT EXISTS foo2 
	MINVALUE 4
	MAXVALUE 6
	-- different variation
	INCREMENT BY 2
	-- different variation
	START WITH 2
	CYCLE
	OWNED BY foo.bar;
"
`;

exports[`Parse and format 04-alterEnumStmt.sql 1`] = `
"-- https://www.postgresql.org/docs/current/sql-altertype.html

ALTER TYPE foo ADD VALUE 'ag';

ALTER TYPE foo ADD VALUE 'asdsadyoyoy' BEFORE 'foo2';

ALTER TYPE foo ADD VALUE 'asdsad';

ALTER TYPE foo ADD VALUE 'asdsad' AFTER 'foo2';

ALTER TYPE foo ADD VALUE IF NOT EXISTS 'asdsad' BEFORE 'foo2';

-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
-- 7
-- 8
-- 9
-- 10
-- 11
ALTER TYPE foo RENAME VALUE 'existing_enum_value' TO 'new_enum_value';
"
`;

exports[`Parse and format 05-alterOwnerStmt.sql 1`] = `
"-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
-- 7
ALTER TYPE foo OWNER TO new_owner;
"
`;

exports[`Parse and format 06-alterSeqStmt.sql 1`] = `
"-- Hello
ALTER SEQUENCE foo 
	OWNED BY a.aaa;

-- Hello
ALTER SEQUENCE foo 
	-- foo
	-- foo2
	INCREMENT BY 1;
"
`;

exports[`Parse and format 07-alterTableStmt.sql 1`] = `
"ALTER TABLE ONLY accounts 
	ALTER id SET DEFAULT 1;

ALTER TABLE accounts 
	ALTER id SET DEFAULT '1';

ALTER TABLE IF EXISTS accounts 
	ALTER id SET DEFAULT '1';

ALTER TABLE IF EXISTS ONLY accounts 
	ALTER id SET DEFAULT TRUE;

ALTER TABLE IF EXISTS ONLY accounts 
	ALTER id SET DEFAULT foo();

-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
ALTER TABLE IF EXISTS ONLY accounts 
	-- 7
	-- 8
	-- 9
	-- 10
	-- 11
	-- 12
	-- 13
	-- 14
	-- 15
	ALTER id SET DEFAULT foo('foo', 1);

-- 1
-- 2
-- 3
-- yoyo
ALTER TABLE foo 
	-- 4
	-- 5
	-- 6
	-- 7
	-- 8
	-- 9
	-- 10
	-- 11
	-- 12
	ADD buckets INTEGER NOT NULL DEFAULT foo('');

ALTER TABLE foo 
	-- bar 
	-- foo
	ADD buckets INTEGER PRIMARY KEY,
	-- foo
	-- bar
	DROP foo;

ALTER TABLE ONLY accounts 
	-- foo
	-- 1
	-- 2
	-- 3
	-- 4
	-- 5
	-- 6
	ADD  CONSTRAINT accounts_pkey PRIMARY KEY (id);

ALTER TABLE ONLY institutions 
	ADD  CONSTRAINT institutions_plaid_type_key UNIQUE (plaid_type);

-- foo
ALTER TABLE ONLY foo 
	-- 1
	-- 2
	-- 3
	-- 4
	-- 5
	-- 6
	-- 7
	-- 8
	-- 9
	-- 10
	-- 11
	ADD  CONSTRAINT foo_bar_id_fkey FOREIGN KEY(bar_id) REFERENCES bar(id) ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE ONLY foo_boo_fooboo 
	ADD  CONSTRAINT foo_boo FOREIGN KEY(boo) REFERENCES fooo(id) ON UPDATE CASCADE ON DELETE CASCADE;
"
`;

exports[`Parse and format 08-dropStmt.sql 1`] = `
"-- DROP SEQUENCE [ IF EXISTS ] name [, ...] [ CASCADE | RESTRICT ]
-- 1
-- 2
-- 3
DROP SEQUENCE foo;

-- DROP TABLE [ IF EXISTS ] name [, ...] [ CASCADE | RESTRICT ]
DROP TABLE foo;

-- DROP TYPE [ IF EXISTS ] name [, ...] [ CASCADE | RESTRICT ]
DROP TYPE foo;

DROP TABLE IF EXISTS foo;

DROP TYPE IF EXISTS foo;

-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
DROP SEQUENCE IF EXISTS foo;

DROP TABLE yo CASCADE;

-- yo
-- yo
DROP TABLE yo;
"
`;

exports[`Parse and format 09-empty.sql 1`] = `""`;

exports[`Parse and format 10-indexStmt.sql 1`] = `
"-- CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] [ name ] ON table [ USING method ]
--     ( { column | ( expression ) } [ COLLATE collation ] [ opclass ] [ ASC | DESC ] [ NULLS { FIRST | LAST } ] [, ...] )
--     [ WITH ( storage_parameter = value [, ... ] ) ]
--     [ TABLESPACE tablespace ]
--     [ WHERE predicate ]

CREATE UNIQUE INDEX foo ON foo_bar (plaid_id);

-- 1
-- 2
-- 3
-- 4
-- 5
-- 6
-- 7
-- 8
-- 9
-- 10
-- 11
-- 12
CREATE INDEX foo ON foo_bar (plaid_id);

CREATE INDEX ON foo_bar (foo);

CREATE UNIQUE INDEX foo ON foo_bar USING hash (plaid_id);

CREATE UNIQUE INDEX foo ON foo_bar USING hash (plaid_id, foobar);
"
`;

exports[`Parse and format 11-variableSetStmt.sql 1`] = `
"SET statement_timeout = 0;

SET lock_timeout = 0;

SET client_encoding = 'UTF8';

SET standard_conforming_strings = 'on';

SET check_function_bodies = 'false';

SET client_min_messages = 'warning';

-- 1
-- foo
SET statement_timeout = 0;

SET client_encoding = ' UTF8';
"
`;

exports[`Parse and format 12-selectStmt.sql 1`] = `
"-- SELECT from dump.
SELECT FALSE;

SELECT pg_catalog.set_config('search_path', '', FALSE);

SELECT nextval('accounts_id_seq'::regclass);
"
`;

exports[`Parse and format 13-viewStmt.sql 1`] = `
"CREATE VIEW foo AS (
	SELECT 1
);
"
`;
