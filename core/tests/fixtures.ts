import { readFileSync } from "fs";
import { resolve } from "path";

export const lintFiles: string[] = [
  //"tablespace", // missing
  "boolean",
  "char",
  //"name", // NEED PEGJS to parse statements.
  "varchar",
  "text",
  "int2",
  "int4",
  "int8",
  "oid",
  "xid",
  "float4",
  "float8",
  "bit",
  "numeric",
  "txid",
  "uuid",
  "enum",
  "money",
  // "rangetypes", // cannot get SQL text
  "pg_lsn",
  "regproc",
  "strings",
  "numerology",
  "point",
  "lseg",
  "line",
  "box",
  "path",
  "polygon",
  "circle",
  "date",
  "time",
  "timetz",
  "timestamp",
  "timestamptz",
  "interval",
  "inet",
  "macaddr",
  "macaddr8",
  "tstypes",
  "geometry",
  "horology",
  "regex",
  "oidjoins",
  "type_sanity",
  "opr_sanity",
  "misc_sanity",
  "comments",
  "expressions",
  "unicode",
  // "create_function_1", // missing
  "create_type",
  "create_table",
  // "create_function_2", // missing
  // "copy", // missing
  "copyselect",
  "copydml",
  "insert",
  "insert_conflict",
  "create_misc",
  "create_operator",
  "create_procedure",
  "create_index",
  "create_index_spgist",
  "create_view",
  "index_including",
  "index_including_gist",
  "create_aggregate",
  "create_function_3",
  "create_cast",
  // "constraints", // missing
  "triggers",
  "select",
  "inherit",
  "typed_table",
  "vacuum",
  "drop_if_exists",
  "updatable_views",
  "roleattributes",
  "create_am",
  "hash_func",
  "errors",
  "sanity_check",
  "select_into",
  "select_distinct",
  "select_distinct_on",
  "select_implicit",
  "select_having",
  "subselect",
  "incremental_sort",
  "union",
  "case",
  "join",
  "aggregates",
  "transactions",
  "portals",
  "arrays",
  "btree_index",
  "hash_index",
  "update",
  "delete",
  "namespace",
  "prepared_xacts",
  "brin",
  "gin",
  "gist",
  "spgist",
  "privileges",
  "init_privs",
  "security_label",
  "collate",
  "matview",
  "lock",
  "replica_identity",
  "rowsecurity",
  "object_address",
  "tablesample",
  "groupingsets",
  "drop_operator",
  "password",
  "identity",
  "generated",
  "join_hash",
  "create_table_like",
  "alter_generic",
  "alter_operator",
  // "misc", // missing
  "async",
  "dbsize",
  "misc_functions",
  "sysviews",
  "tsrf",
  "tidscan",
  "collate.icu.utf8",
  "rules",
  "psql",
  "psql_crosstab",
  "amutils",
  "stats_ext",
  "collate.linux.utf8",
  "select_parallel",
  "write_parallel",
  "publication",
  "subscription",
  "select_views",
  "portals_p2",
  "foreign_key",
  "cluster",
  "dependency",
  "guc",
  "bitmapops",
  "combocid",
  "tsearch",
  "tsdicts",
  "foreign_data",
  "window",
  "xmlmap",
  "functional_deps",
  "advisory_lock",
  "indirect_toast",
  "equivclass",
  "json",
  "jsonb",
  "json_encoding",
  "jsonpath",
  "jsonpath_encoding",
  "jsonb_jsonpath",
  "plancache",
  "limit",
  "plpgsql",
  "copy2",
  "temp",
  "domain",
  "rangefuncs",
  "prepare",
  "conversion",
  "truncate",
  "alter_table",
  "sequence",
  "polymorphism",
  "rowtypes",
  "returning",
  // "largeobject", // missing
  "with",
  "xml",
  "partition_join",
  "partition_prune",
  "reloptions",
  "hash_part",
  "indexing",
  "partition_aggregate",
  "partition_info",
  "tuplesort",
  "explain",
  "event_trigger",
  "fast_default",
  "stats",
];

function* fixtures(): Iterator<string, void> {
  for (const name of lintFiles) {
    const pathToFile = resolve(
      `${__dirname}/../../fixtures/regress/${name}.sql`
    );

    const sql = readFileSync(pathToFile).toString();
    yield sql;
  }
}

export default fixtures;
